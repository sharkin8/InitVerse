package systemcontract

import (
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/consensus/parlia/vmcaller"
	"github.com/ethereum/go-ethereum/core"
	"github.com/ethereum/go-ethereum/core/state"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/log"
	"github.com/ethereum/go-ethereum/params"
	"math"
	"math/big"
)

var (
	devAdmin        = common.HexToAddress("0xce930537a2148b8dc43899ff2e9bcbee0e801c54")
	devAdminTestnet = common.HexToAddress("0xce930537a2148b8dc43899ff2e9bcbee0e801c54")
)

const (
	addressListCode = "0x608060405234801561001057600080fd5b506004361061011b5760003560e01c80634fb9e9b7116100b25780639e23c20911610081578063db6619b011610066578063db6619b014610269578063f851a44014610271578063fb48270c1461028a57600080fd5b80639e23c20914610243578063c4d66de81461025657600080fd5b80634fb9e9b7146101e95780635eca4a70146101fc5780636dfb51761461022857806370b03fc51461023b57600080fd5b806326782247116100ee5780632678224714610191578063327564b6146101bc578063349cb711146101ce57806343e0c73a146101e157600080fd5b8063143d79b614610120578063158ef93e1461014a57806318c662121461016757806322fbf1e81461017c575b600080fd5b61013361012e36600461118b565b610292565b604051610141929190611257565b60405180910390f35b6000546101579060ff1681565b6040519015158152602001610141565b61016f61030f565b604051610141919061120a565b61018f61018a36600461118b565b610371565b005b6001546101a4906001600160a01b031681565b6040516001600160a01b039091168152602001610141565b60005461015790610100900460ff1681565b61018f6101dc3660046111ad565b610478565b61018f610686565b61018f6101f736600461118b565b61075f565b61015761020a36600461118b565b6001600160a01b031660009081526002602052604090205460ff1690565b61018f6102363660046111ad565b6107f6565b61016f610c2b565b61018f61025136600461118b565b610c8b565b61018f61026436600461118b565b610d89565b61018f610e26565b6000546101a4906201000090046001600160a01b031681565b61018f610f05565b6001600160a01b038116600090815260056020908152604080832054600690925282205482911580159115159082906102c85750805b156102db57506001946002945092505050565b81156102ef57506001946000945092505050565b8015610302575060019485945092505050565b5060009485945092505050565b6060600380548060200260200160405190810160405280929190818152602001828054801561036757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610349575b5050505050905090565b6000546201000090046001600160a01b031633146103c35760405162461bcd60e51b815260206004820152600a60248201526941646d696e206f6e6c7960b01b60448201526064015b60405180910390fd5b6001600160a01b03811660009081526002602052604090205460ff161561042c5760405162461bcd60e51b815260206004820152600d60248201527f616c72656164792061646465640000000000000000000000000000000000000060448201526064016103ba565b6001600160a01b038116600081815260026020526040808220805460ff19166001179055517f058fdae480ed8e99b762bceb2d39835a68ee3a4789cd84e5c90cd59722ba02099190a250565b6000546201000090046001600160a01b031633146104c55760405162461bcd60e51b815260206004820152600a60248201526941646d696e206f6e6c7960b01b60448201526064016103ba565b60028160028111156104d9576104d96112c6565b14156105af576001600160a01b0382166000908152600560205260409020546105375760405162461bcd60e51b815260206004820152601060248201526f1b9bdd081a5b88199c9bdb481b1a5cdd60821b60448201526064016103ba565b6001600160a01b03821660009081526006602052604090205461058d5760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd081a5b881d1bc81b1a5cdd60921b60448201526064016103ba565b61059c60036005846000610fdf565b6105ab60046006846001610fdf565b5050565b60008160028111156105c3576105c36112c6565b1415610630576001600160a01b0382166000908152600560205260409020546106215760405162461bcd60e51b815260206004820152601060248201526f1b9bdd081a5b88199c9bdb481b1a5cdd60821b60448201526064016103ba565b6105ab60036005846000610fdf565b6001600160a01b03821660009081526006602052604090205461059c5760405162461bcd60e51b815260206004820152600e60248201526d1b9bdd081a5b881d1bc81b1a5cdd60921b60448201526064016103ba565b6000546201000090046001600160a01b031633146106d35760405162461bcd60e51b815260206004820152600a60248201526941646d696e206f6e6c7960b01b60448201526064016103ba565b600054610100900460ff1661072a5760405162461bcd60e51b815260206004820152601060248201527f616c72656164792064697361626c65640000000000000000000000000000000060448201526064016103ba565b6000805461ff00191681556040517f733a7f99819dc7466bff56e7c0b6753b43b750a692f2a5bb4fe373815a0c7845908290a2565b6000546201000090046001600160a01b031633146107ac5760405162461bcd60e51b815260206004820152600a60248201526941646d696e206f6e6c7960b01b60448201526064016103ba565b600180546001600160a01b0319166001600160a01b0383169081179091556040517faefcaa6215f99fe8c2f605dd268ee4d23a5b596bbca026e25ce8446187f4f1ba90600090a250565b6000546201000090046001600160a01b031633146108435760405162461bcd60e51b815260206004820152600a60248201526941646d696e206f6e6c7960b01b60448201526064016103ba565b6000546001600160a01b03838116620100009092041614156108a75760405162461bcd60e51b815260206004820152601d60248201527f63616e6e6f74206164642061646d696e20746f20626c61636b6c69737400000060448201526064016103ba565b60028160028111156108bb576108bb6112c6565b1415610a46576001600160a01b038216600090815260056020526040902054156109275760405162461bcd60e51b815260206004820152601460248201527f616c726561647920696e2066726f6d206c69737400000000000000000000000060448201526064016103ba565b6001600160a01b0382166000908152600660205260409020541561098d5760405162461bcd60e51b815260206004820152601260248201527f616c726561647920696e20746f206c697374000000000000000000000000000060448201526064016103ba565b600380546001810182557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b038516908117909155905460009182526005602052604090912055600480546001810182557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b038516908117909155905460009182526006602052604090912055610be6565b6000816002811115610a5a57610a5a6112c6565b1415610b25576001600160a01b03821660009081526005602052604090205415610ac65760405162461bcd60e51b815260206004820152601460248201527f616c726561647920696e2066726f6d206c69737400000000000000000000000060448201526064016103ba565b600380546001810182557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b038516908117909155905460009182526005602052604090912055610be6565b6001600160a01b03821660009081526006602052604090205415610b8b5760405162461bcd60e51b815260206004820152601260248201527f616c726561647920696e20746f206c697374000000000000000000000000000060448201526064016103ba565b600480546001810182557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0385169081179091559054600091825260066020526040909120555b816001600160a01b03167f4bb8845da5ed7c2df200814ba7a0f3db11326cc817cf9a042fa54d4e5f6f29bb82604051610c1f919061126d565b60405180910390a25050565b60606004805480602002602001604051908101604052809291908181526020018280548015610367576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610349575050505050905090565b6000546201000090046001600160a01b03163314610cd85760405162461bcd60e51b815260206004820152600a60248201526941646d696e206f6e6c7960b01b60448201526064016103ba565b6001600160a01b03811660009081526002602052604090205460ff16610d405760405162461bcd60e51b815260206004820152600f60248201527f6e6f74206120646576656c6f706572000000000000000000000000000000000060448201526064016103ba565b6001600160a01b038116600081815260026020526040808220805460ff19169055517f110a48e3e347ae018d4d40446e4e917b416f912dec489da19b4507bb9bb18cd49190a250565b60005460ff1615610ddc5760405162461bcd60e51b815260206004820152601360248201527f416c726561647920696e697469616c697a65640000000000000000000000000060448201526064016103ba565b6000805460ff196001600160a01b039093166201000002929092167fffffffffffffffffffff0000000000000000000000000000000000000000ff00909216919091176001179055565b6000546201000090046001600160a01b03163314610e735760405162461bcd60e51b815260206004820152600a60248201526941646d696e206f6e6c7960b01b60448201526064016103ba565b600054610100900460ff1615610ecb5760405162461bcd60e51b815260206004820152600f60248201527f616c726561647920656e61626c6564000000000000000000000000000000000060448201526064016103ba565b6000805461ff0019166101001781556040516001917f733a7f99819dc7466bff56e7c0b6753b43b750a692f2a5bb4fe373815a0c784591a2565b6001546001600160a01b03163314610f5f5760405162461bcd60e51b815260206004820152600e60248201527f4e65772061646d696e206f6e6c7900000000000000000000000000000000000060448201526064016103ba565b60018054600080547fffffffffffffffffffff0000000000000000000000000000000000000000ffff166001600160a01b0380841662010000908102929092178084556001600160a01b03199094169094556040519204909216917f7ce7ec0b50378fb6c0186ffb5f48325f6593fcb4ca4386f21861af3129188f5c91a2565b6001600160a01b03821660009081526020849052604081205461100490600190611299565b6001600160a01b038416600090815260208690526040812055855490915061102e90600190611299565b81146110f3578454859061104490600190611299565b81548110611054576110546112f2565b9060005260206000200160009054906101000a90046001600160a01b0316858281548110611084576110846112f2565b600091825260209091200180546001600160a01b0319166001600160a01b03929092169190911790556110b8816001611281565b8460008784815481106110cd576110cd6112f2565b60009182526020808320909101546001600160a01b031683528201929092526040019020555b84805480611103576111036112dc565b600082815260209020810160001990810180546001600160a01b03191690550190556040516001600160a01b038416907f91b762fba034b39c8b14c1e6463a15b1f4c211dcd0023f7fa2f4ae2928dfc44d9061116090859061126d565b60405180910390a25050505050565b80356001600160a01b038116811461118657600080fd5b919050565b60006020828403121561119d57600080fd5b6111a68261116f565b9392505050565b600080604083850312156111c057600080fd5b6111c98361116f565b91506020830135600381106111dd57600080fd5b809150509250929050565b6003811061120657634e487b7160e01b600052602160045260246000fd5b9052565b6020808252825182820181905260009190848201906040850190845b8181101561124b5783516001600160a01b031683529284019291840191600101611226565b50909695505050505050565b8215158152604081016111a660208301846111e8565b6020810161127b82846111e8565b92915050565b60008219821115611294576112946112b0565b500190565b6000828210156112ab576112ab6112b0565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea164736f6c6343000807000a"
)

type hardForkAddressList struct {
}

func (s *hardForkAddressList) GetName() string {
	return AddressListContractName
}

func (s *hardForkAddressList) Update(config *params.ChainConfig, height *big.Int, state *state.StateDB) (err error) {
	contractCode := common.FromHex(addressListCode)

	//write addressListCode to sys contract
	state.SetCode(AddressListContractAddr, contractCode)
	log.Debug("Write code to system contract account", "addr", AddressListContractAddr.String(), "code", addressListCode)

	return
}

func (s *hardForkAddressList) getAdminByChainId(chainId *big.Int) common.Address {
	if chainId.Cmp(params.MainnetChainConfig.ChainID) == 0 {
		return devAdmin
	}

	return devAdminTestnet
}

func (s *hardForkAddressList) Execute(state *state.StateDB, header *types.Header, chainContext core.ChainContext, config *params.ChainConfig) (err error) {

	method := "initialize"
	data, err := GetInteractiveABI()[AddressListContractName].Pack(method, s.getAdminByChainId(config.ChainID))
	if err != nil {
		log.Error("Can't pack data for initialize", "error", err)
		return err
	}

	msg := types.NewMessage(header.Coinbase, &AddressListContractAddr, 0, new(big.Int), math.MaxUint64, new(big.Int), data, nil, false)
	vmcaller.ExecuteMsg(msg, state, header, chainContext, config)
	//context := core.NewEVMContext(msg, header, chainContext, nil)
	//evm := vm.NewEVM(context, state, config, vm.Config{})
	//
	//_, _, err = evm.Call(vm.AccountRef(msg.From()), *msg.To(), msg.Data(), msg.Gas(), msg.Value())

	return
}
